using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using Sharpility.Extensions;
using NodaTime;

namespace BungieNetApi._Platform.Models
{
    /// <summary>
    /// ApplicationsApplication
    /// </summary>
    public sealed class ApplicationsApplication:  IEquatable<ApplicationsApplication>
    { 
        /// <summary>
        /// ApplicationType
        /// </summary>
        public int? ApplicationType { get; private set; }

        /// <summary>
        /// Unique ID assigned to the application
        /// </summary>
        public int? ApplicationId { get; private set; }

        /// <summary>
        /// Name of the application
        /// </summary>
        public string Name { get; private set; }

        /// <summary>
        /// URL used to pass the user&#39;s authorization code to the application
        /// </summary>
        public string RedirectUrl { get; private set; }

        /// <summary>
        /// Link to website for the application where a user can learn more about the app.
        /// </summary>
        public string Link { get; private set; }

        /// <summary>
        /// Permissions the application needs to work
        /// </summary>
        public long? Scope { get; private set; }

        /// <summary>
        /// Value of the Origin header sent in requests generated by this application.
        /// </summary>
        public string Origin { get; private set; }

        /// <summary>
        /// Current status of the application.
        /// </summary>
        public int? Status { get; private set; }

        /// <summary>
        /// Date the application was first added to our database.
        /// </summary>
        public DateTime? CreationDate { get; private set; }

        /// <summary>
        /// Date the application status last changed.
        /// </summary>
        public DateTime? StatusChanged { get; private set; }

        /// <summary>
        /// Date the first time the application status entered the &#39;Public&#39; status.
        /// </summary>
        public DateTime? FirstPublished { get; private set; }

        /// <summary>
        /// List of team members who manage this application on Bungie.net. Will always consist of at least the application owner.
        /// </summary>
        public List<ApplicationsApplicationDeveloper> Team { get; private set; }


        /// <summary>
        /// Empty constructor required by some serializers.
        /// Use ApplicationsApplication.Builder() for instance creation instead.
        /// </summary>
        [Obsolete]
        public ApplicationsApplication()
        {
        }

        private ApplicationsApplication(int? ApplicationType, int? ApplicationId, string Name, string RedirectUrl, string Link, long? Scope, string Origin, int? Status, DateTime? CreationDate, DateTime? StatusChanged, DateTime? FirstPublished, List<ApplicationsApplicationDeveloper> Team)
        {
            
            this.ApplicationType = ApplicationType;
            
            this.ApplicationId = ApplicationId;
            
            this.Name = Name;
            
            this.RedirectUrl = RedirectUrl;
            
            this.Link = Link;
            
            this.Scope = Scope;
            
            this.Origin = Origin;
            
            this.Status = Status;
            
            this.CreationDate = CreationDate;
            
            this.StatusChanged = StatusChanged;
            
            this.FirstPublished = FirstPublished;
            
            this.Team = Team;
            
        }

        /// <summary>
        /// Returns builder of ApplicationsApplication.
        /// </summary>
        /// <returns>ApplicationsApplicationBuilder</returns>
        public static ApplicationsApplicationBuilder Builder()
        {
            return new ApplicationsApplicationBuilder();
        }

        /// <summary>
        /// Returns ApplicationsApplicationBuilder with properties set.
        /// Use it to change properties.
        /// </summary>
        /// <returns>ApplicationsApplicationBuilder</returns>
        public ApplicationsApplicationBuilder With()
        {
            return Builder()
                .ApplicationType(ApplicationType)
                .ApplicationId(ApplicationId)
                .Name(Name)
                .RedirectUrl(RedirectUrl)
                .Link(Link)
                .Scope(Scope)
                .Origin(Origin)
                .Status(Status)
                .CreationDate(CreationDate)
                .StatusChanged(StatusChanged)
                .FirstPublished(FirstPublished)
                .Team(Team);
        }

        public override string ToString()
        {
            return this.PropertiesToString();
        }

        public override bool Equals(object obj)
        {
            return this.EqualsByProperties(obj);
        }

        public bool Equals(ApplicationsApplication other)
        {
            return Equals((object) other);
        }

        public override int GetHashCode()
        {
            return this.PropertiesHash();
        }

        /// <summary>
        /// Implementation of == operator for (ApplicationsApplication.
        /// </summary>
        /// <param name="left">Compared (ApplicationsApplication</param>
        /// <param name="right">Compared (ApplicationsApplication</param>
        /// <returns>true if compared items are equals, false otherwise</returns>
        public static bool operator == (ApplicationsApplication left, ApplicationsApplication right)
        {
            return Equals(left, right);
        }

        /// <summary>
        /// Implementation of != operator for (ApplicationsApplication.
        /// </summary>
        /// <param name="left">Compared (ApplicationsApplication</param>
        /// <param name="right">Compared (ApplicationsApplication</param>
        /// <returns>true if compared items are not equals, false otherwise</returns>
        public static bool operator != (ApplicationsApplication left, ApplicationsApplication right)
        {
            return !Equals(left, right);
        }

        /// <summary>
        /// Builder of ApplicationsApplication.
        /// </summary>
        public sealed class ApplicationsApplicationBuilder
        {
            private int? _ApplicationType;
            private int? _ApplicationId;
            private string _Name;
            private string _RedirectUrl;
            private string _Link;
            private long? _Scope;
            private string _Origin;
            private int? _Status;
            private DateTime? _CreationDate;
            private DateTime? _StatusChanged;
            private DateTime? _FirstPublished;
            private List<ApplicationsApplicationDeveloper> _Team;

            internal ApplicationsApplicationBuilder()
            {
                SetupDefaults();
            }

            private void SetupDefaults()
            {
            }

            /// <summary>
            /// Sets value for ApplicationsApplication.ApplicationType property.
            /// </summary>
            /// <param name="value">ApplicationType</param>
            public ApplicationsApplicationBuilder ApplicationType(int? value)
            {
                _ApplicationType = value;
                return this;
            }

            /// <summary>
            /// Sets value for ApplicationsApplication.ApplicationId property.
            /// </summary>
            /// <param name="value">Unique ID assigned to the application</param>
            public ApplicationsApplicationBuilder ApplicationId(int? value)
            {
                _ApplicationId = value;
                return this;
            }

            /// <summary>
            /// Sets value for ApplicationsApplication.Name property.
            /// </summary>
            /// <param name="value">Name of the application</param>
            public ApplicationsApplicationBuilder Name(string value)
            {
                _Name = value;
                return this;
            }

            /// <summary>
            /// Sets value for ApplicationsApplication.RedirectUrl property.
            /// </summary>
            /// <param name="value">URL used to pass the user&#39;s authorization code to the application</param>
            public ApplicationsApplicationBuilder RedirectUrl(string value)
            {
                _RedirectUrl = value;
                return this;
            }

            /// <summary>
            /// Sets value for ApplicationsApplication.Link property.
            /// </summary>
            /// <param name="value">Link to website for the application where a user can learn more about the app.</param>
            public ApplicationsApplicationBuilder Link(string value)
            {
                _Link = value;
                return this;
            }

            /// <summary>
            /// Sets value for ApplicationsApplication.Scope property.
            /// </summary>
            /// <param name="value">Permissions the application needs to work</param>
            public ApplicationsApplicationBuilder Scope(long? value)
            {
                _Scope = value;
                return this;
            }

            /// <summary>
            /// Sets value for ApplicationsApplication.Origin property.
            /// </summary>
            /// <param name="value">Value of the Origin header sent in requests generated by this application.</param>
            public ApplicationsApplicationBuilder Origin(string value)
            {
                _Origin = value;
                return this;
            }

            /// <summary>
            /// Sets value for ApplicationsApplication.Status property.
            /// </summary>
            /// <param name="value">Current status of the application.</param>
            public ApplicationsApplicationBuilder Status(int? value)
            {
                _Status = value;
                return this;
            }

            /// <summary>
            /// Sets value for ApplicationsApplication.CreationDate property.
            /// </summary>
            /// <param name="value">Date the application was first added to our database.</param>
            public ApplicationsApplicationBuilder CreationDate(DateTime? value)
            {
                _CreationDate = value;
                return this;
            }

            /// <summary>
            /// Sets value for ApplicationsApplication.StatusChanged property.
            /// </summary>
            /// <param name="value">Date the application status last changed.</param>
            public ApplicationsApplicationBuilder StatusChanged(DateTime? value)
            {
                _StatusChanged = value;
                return this;
            }

            /// <summary>
            /// Sets value for ApplicationsApplication.FirstPublished property.
            /// </summary>
            /// <param name="value">Date the first time the application status entered the &#39;Public&#39; status.</param>
            public ApplicationsApplicationBuilder FirstPublished(DateTime? value)
            {
                _FirstPublished = value;
                return this;
            }

            /// <summary>
            /// Sets value for ApplicationsApplication.Team property.
            /// </summary>
            /// <param name="value">List of team members who manage this application on Bungie.net. Will always consist of at least the application owner.</param>
            public ApplicationsApplicationBuilder Team(List<ApplicationsApplicationDeveloper> value)
            {
                _Team = value;
                return this;
            }


            /// <summary>
            /// Builds instance of ApplicationsApplication.
            /// </summary>
            /// <returns>ApplicationsApplication</returns>
            public ApplicationsApplication Build()
            {
                Validate();
                return new ApplicationsApplication(
                    ApplicationType: _ApplicationType,
                    ApplicationId: _ApplicationId,
                    Name: _Name,
                    RedirectUrl: _RedirectUrl,
                    Link: _Link,
                    Scope: _Scope,
                    Origin: _Origin,
                    Status: _Status,
                    CreationDate: _CreationDate,
                    StatusChanged: _StatusChanged,
                    FirstPublished: _FirstPublished,
                    Team: _Team
                );
            }

            private void Validate()
            { 
            }
        }

        
    }
}