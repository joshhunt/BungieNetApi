/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.8.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using BungieNetApi.Client;
using BungieNetApi.Api;
using BungieNetApi.Model;

namespace BungieNetApi.Test
{
    /// <summary>
    ///  Class for testing GroupV2Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GroupV2ApiTests : IDisposable
    {
        private GroupV2Api instance;

        public GroupV2ApiTests()
        {
            instance = new GroupV2Api();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GroupV2Api
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' GroupV2Api
            //Assert.IsType(typeof(GroupV2Api), instance, "instance is a GroupV2Api");
        }

        
        /// <summary>
        /// Test GroupV2AbdicateFoundership
        /// </summary>
        [Fact]
        public void GroupV2AbdicateFoundershipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long founderIdNew = null;
            //long groupId = null;
            //int membershipType = null;
            //var response = instance.GroupV2AbdicateFoundership(founderIdNew, groupId, membershipType);
            //Assert.IsType<InlineResponse20017> (response, "response is InlineResponse20017");
        }
        
        /// <summary>
        /// Test GroupV2AddOptionalConversation
        /// </summary>
        [Fact]
        public void GroupV2AddOptionalConversationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //var response = instance.GroupV2AddOptionalConversation(groupId);
            //Assert.IsType<InlineResponse20012> (response, "response is InlineResponse20012");
        }
        
        /// <summary>
        /// Test GroupV2ApproveAllPending
        /// </summary>
        [Fact]
        public void GroupV2ApproveAllPendingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //var response = instance.GroupV2ApproveAllPending(groupId);
            //Assert.IsType<InlineResponse20027> (response, "response is InlineResponse20027");
        }
        
        /// <summary>
        /// Test GroupV2ApprovePending
        /// </summary>
        [Fact]
        public void GroupV2ApprovePendingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //long membershipId = null;
            //int membershipType = null;
            //var response = instance.GroupV2ApprovePending(groupId, membershipId, membershipType);
            //Assert.IsType<InlineResponse20017> (response, "response is InlineResponse20017");
        }
        
        /// <summary>
        /// Test GroupV2ApprovePendingForList
        /// </summary>
        [Fact]
        public void GroupV2ApprovePendingForListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //var response = instance.GroupV2ApprovePendingForList(groupId);
            //Assert.IsType<InlineResponse20027> (response, "response is InlineResponse20027");
        }
        
        /// <summary>
        /// Test GroupV2BanMember
        /// </summary>
        [Fact]
        public void GroupV2BanMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //long membershipId = null;
            //int membershipType = null;
            //var response = instance.GroupV2BanMember(groupId, membershipId, membershipType);
            //Assert.IsType<InlineResponse20022> (response, "response is InlineResponse20022");
        }
        
        /// <summary>
        /// Test GroupV2DenyAllPending
        /// </summary>
        [Fact]
        public void GroupV2DenyAllPendingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //var response = instance.GroupV2DenyAllPending(groupId);
            //Assert.IsType<InlineResponse20027> (response, "response is InlineResponse20027");
        }
        
        /// <summary>
        /// Test GroupV2DenyPendingForList
        /// </summary>
        [Fact]
        public void GroupV2DenyPendingForListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //var response = instance.GroupV2DenyPendingForList(groupId);
            //Assert.IsType<InlineResponse20027> (response, "response is InlineResponse20027");
        }
        
        /// <summary>
        /// Test GroupV2EditClanBanner
        /// </summary>
        [Fact]
        public void GroupV2EditClanBannerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //var response = instance.GroupV2EditClanBanner(groupId);
            //Assert.IsType<InlineResponse20022> (response, "response is InlineResponse20022");
        }
        
        /// <summary>
        /// Test GroupV2EditFounderOptions
        /// </summary>
        [Fact]
        public void GroupV2EditFounderOptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //var response = instance.GroupV2EditFounderOptions(groupId);
            //Assert.IsType<InlineResponse20022> (response, "response is InlineResponse20022");
        }
        
        /// <summary>
        /// Test GroupV2EditGroup
        /// </summary>
        [Fact]
        public void GroupV2EditGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //var response = instance.GroupV2EditGroup(groupId);
            //Assert.IsType<InlineResponse20022> (response, "response is InlineResponse20022");
        }
        
        /// <summary>
        /// Test GroupV2EditGroupMembership
        /// </summary>
        [Fact]
        public void GroupV2EditGroupMembershipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //long membershipId = null;
            //int membershipType = null;
            //int memberType = null;
            //var response = instance.GroupV2EditGroupMembership(groupId, membershipId, membershipType, memberType);
            //Assert.IsType<InlineResponse20022> (response, "response is InlineResponse20022");
        }
        
        /// <summary>
        /// Test GroupV2EditOptionalConversation
        /// </summary>
        [Fact]
        public void GroupV2EditOptionalConversationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long conversationId = null;
            //long groupId = null;
            //var response = instance.GroupV2EditOptionalConversation(conversationId, groupId);
            //Assert.IsType<InlineResponse20012> (response, "response is InlineResponse20012");
        }
        
        /// <summary>
        /// Test GroupV2GetAdminsAndFounderOfGroup
        /// </summary>
        [Fact]
        public void GroupV2GetAdminsAndFounderOfGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int currentpage = null;
            //long groupId = null;
            //var response = instance.GroupV2GetAdminsAndFounderOfGroup(currentpage, groupId);
            //Assert.IsType<InlineResponse20023> (response, "response is InlineResponse20023");
        }
        
        /// <summary>
        /// Test GroupV2GetAvailableAvatars
        /// </summary>
        [Fact]
        public void GroupV2GetAvailableAvatarsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GroupV2GetAvailableAvatars();
            //Assert.IsType<InlineResponse20015> (response, "response is InlineResponse20015");
        }
        
        /// <summary>
        /// Test GroupV2GetAvailableThemes
        /// </summary>
        [Fact]
        public void GroupV2GetAvailableThemesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GroupV2GetAvailableThemes();
            //Assert.IsType<InlineResponse20016> (response, "response is InlineResponse20016");
        }
        
        /// <summary>
        /// Test GroupV2GetBannedMembersOfGroup
        /// </summary>
        [Fact]
        public void GroupV2GetBannedMembersOfGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int currentpage = null;
            //long groupId = null;
            //var response = instance.GroupV2GetBannedMembersOfGroup(currentpage, groupId);
            //Assert.IsType<InlineResponse20025> (response, "response is InlineResponse20025");
        }
        
        /// <summary>
        /// Test GroupV2GetGroup
        /// </summary>
        [Fact]
        public void GroupV2GetGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //var response = instance.GroupV2GetGroup(groupId);
            //Assert.IsType<InlineResponse20020> (response, "response is InlineResponse20020");
        }
        
        /// <summary>
        /// Test GroupV2GetGroupByName
        /// </summary>
        [Fact]
        public void GroupV2GetGroupByNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupName = null;
            //int groupType = null;
            //var response = instance.GroupV2GetGroupByName(groupName, groupType);
            //Assert.IsType<InlineResponse20020> (response, "response is InlineResponse20020");
        }
        
        /// <summary>
        /// Test GroupV2GetGroupByNameV2
        /// </summary>
        [Fact]
        public void GroupV2GetGroupByNameV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GroupV2GetGroupByNameV2();
            //Assert.IsType<InlineResponse20020> (response, "response is InlineResponse20020");
        }
        
        /// <summary>
        /// Test GroupV2GetGroupOptionalConversations
        /// </summary>
        [Fact]
        public void GroupV2GetGroupOptionalConversationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //var response = instance.GroupV2GetGroupOptionalConversations(groupId);
            //Assert.IsType<InlineResponse20021> (response, "response is InlineResponse20021");
        }
        
        /// <summary>
        /// Test GroupV2GetGroupsForMember
        /// </summary>
        [Fact]
        public void GroupV2GetGroupsForMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int filter = null;
            //int groupType = null;
            //long membershipId = null;
            //int membershipType = null;
            //var response = instance.GroupV2GetGroupsForMember(filter, groupType, membershipId, membershipType);
            //Assert.IsType<InlineResponse20028> (response, "response is InlineResponse20028");
        }
        
        /// <summary>
        /// Test GroupV2GetInvitedIndividuals
        /// </summary>
        [Fact]
        public void GroupV2GetInvitedIndividualsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int currentpage = null;
            //long groupId = null;
            //var response = instance.GroupV2GetInvitedIndividuals(currentpage, groupId);
            //Assert.IsType<InlineResponse20026> (response, "response is InlineResponse20026");
        }
        
        /// <summary>
        /// Test GroupV2GetMembersOfGroup
        /// </summary>
        [Fact]
        public void GroupV2GetMembersOfGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int currentpage = null;
            //long groupId = null;
            //int? memberType = null;
            //string nameSearch = null;
            //var response = instance.GroupV2GetMembersOfGroup(currentpage, groupId, memberType, nameSearch);
            //Assert.IsType<InlineResponse20023> (response, "response is InlineResponse20023");
        }
        
        /// <summary>
        /// Test GroupV2GetPendingMemberships
        /// </summary>
        [Fact]
        public void GroupV2GetPendingMembershipsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int currentpage = null;
            //long groupId = null;
            //var response = instance.GroupV2GetPendingMemberships(currentpage, groupId);
            //Assert.IsType<InlineResponse20026> (response, "response is InlineResponse20026");
        }
        
        /// <summary>
        /// Test GroupV2GetPotentialGroupsForMember
        /// </summary>
        [Fact]
        public void GroupV2GetPotentialGroupsForMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int filter = null;
            //int groupType = null;
            //long membershipId = null;
            //int membershipType = null;
            //var response = instance.GroupV2GetPotentialGroupsForMember(filter, groupType, membershipId, membershipType);
            //Assert.IsType<InlineResponse20030> (response, "response is InlineResponse20030");
        }
        
        /// <summary>
        /// Test GroupV2GetRecommendedGroups
        /// </summary>
        [Fact]
        public void GroupV2GetRecommendedGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int createDateRange = null;
            //int groupType = null;
            //var response = instance.GroupV2GetRecommendedGroups(createDateRange, groupType);
            //Assert.IsType<InlineResponse20018> (response, "response is InlineResponse20018");
        }
        
        /// <summary>
        /// Test GroupV2GetUserClanInviteSetting
        /// </summary>
        [Fact]
        public void GroupV2GetUserClanInviteSettingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int mType = null;
            //var response = instance.GroupV2GetUserClanInviteSetting(mType);
            //Assert.IsType<InlineResponse20017> (response, "response is InlineResponse20017");
        }
        
        /// <summary>
        /// Test GroupV2GroupSearch
        /// </summary>
        [Fact]
        public void GroupV2GroupSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GroupV2GroupSearch();
            //Assert.IsType<InlineResponse20019> (response, "response is InlineResponse20019");
        }
        
        /// <summary>
        /// Test GroupV2IndividualGroupInvite
        /// </summary>
        [Fact]
        public void GroupV2IndividualGroupInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //long membershipId = null;
            //int membershipType = null;
            //var response = instance.GroupV2IndividualGroupInvite(groupId, membershipId, membershipType);
            //Assert.IsType<InlineResponse20031> (response, "response is InlineResponse20031");
        }
        
        /// <summary>
        /// Test GroupV2IndividualGroupInviteCancel
        /// </summary>
        [Fact]
        public void GroupV2IndividualGroupInviteCancelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //long membershipId = null;
            //int membershipType = null;
            //var response = instance.GroupV2IndividualGroupInviteCancel(groupId, membershipId, membershipType);
            //Assert.IsType<InlineResponse20031> (response, "response is InlineResponse20031");
        }
        
        /// <summary>
        /// Test GroupV2KickMember
        /// </summary>
        [Fact]
        public void GroupV2KickMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //long membershipId = null;
            //int membershipType = null;
            //var response = instance.GroupV2KickMember(groupId, membershipId, membershipType);
            //Assert.IsType<InlineResponse20024> (response, "response is InlineResponse20024");
        }
        
        /// <summary>
        /// Test GroupV2RecoverGroupForFounder
        /// </summary>
        [Fact]
        public void GroupV2RecoverGroupForFounderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int groupType = null;
            //long membershipId = null;
            //int membershipType = null;
            //var response = instance.GroupV2RecoverGroupForFounder(groupType, membershipId, membershipType);
            //Assert.IsType<InlineResponse20029> (response, "response is InlineResponse20029");
        }
        
        /// <summary>
        /// Test GroupV2UnbanMember
        /// </summary>
        [Fact]
        public void GroupV2UnbanMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long groupId = null;
            //long membershipId = null;
            //int membershipType = null;
            //var response = instance.GroupV2UnbanMember(groupId, membershipId, membershipType);
            //Assert.IsType<InlineResponse20022> (response, "response is InlineResponse20022");
        }
        
    }

}
