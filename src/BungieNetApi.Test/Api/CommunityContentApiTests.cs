/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.8.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using BungieNetApi.Client;
using BungieNetApi.Api;
using BungieNetApi.Model;

namespace BungieNetApi.Test
{
    /// <summary>
    ///  Class for testing CommunityContentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CommunityContentApiTests
    {
        private CommunityContentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CommunityContentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CommunityContentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' CommunityContentApi
            //Assert.IsInstanceOf(typeof(CommunityContentApi), instance);
        }

        
        /// <summary>
        /// Test CommunityContentGetCommunityContent
        /// </summary>
        [Test]
        public void CommunityContentGetCommunityContentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int mediaFilter = null;
            //int page = null;
            //int sort = null;
            //var response = instance.CommunityContentGetCommunityContent(mediaFilter, page, sort);
            //Assert.IsInstanceOf(typeof(InlineResponse20011), response, "response is InlineResponse20011");
        }
        
    }

}
